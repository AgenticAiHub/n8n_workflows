{
  "name": "Spare Parts Price Quotes with Gmail",
  "nodes": [
    {
      "parameters": {
        "content": "# üöÄ Automated Quote Generator Workflow\n\n## Overview\nThis workflow automatically:\n1. **Monitors Gmail** for spare parts requests\n2. **Identifies** requests using keyword detection\n3. **Generates** professional HTML quotes using AI\n4. **Replies** automatically with pricing\n\n## Setup Required:\n1. Configure Gmail OAuth2 credentials\n2. Set up Google Sheets with your data\n3. Configure Google Gemini API\n4. Update the sticky notes with your sheet IDs\n\n## Language Support:\nThe AI automatically detects and responds in the sender's language (Turkish, English, German, etc.)",
        "height": 580,
        "width": 400,
        "color": 5
      },
      "id": "ebc4b937-f01f-4353-92b9-cfc378e394ca",
      "name": "Welcome & Overview",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -280,
        -620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìä Required Google Sheets Structure\n\n### Sheet 1: CRM Data\n**Columns Required:**\n- `Email` - Customer email addresses\n- `ProjectCode` - Project codes\n- `CustomerName` - Customer names\n- Other customer data as needed\n\n### Sheet 2: Bill of Materials (BoM)\n**Columns Required:**\n- `ProjectCode` - Project code\n- `PartCode` - Part code\n- `PartDescription` - Part description\n- `Quantity` - Quantity\n\n### Sheet 3: Pricing Data\n**Columns Required:**\n- `PartCode` - Part code\n- `UnitPriceEUR` - Unit price in EUR\n- `PartDescription` - Part description",
        "height": 600,
        "width": 400,
        "color": 4
      },
      "id": "a0a0c24a-cb85-42b9-9dd5-f45be416b33d",
      "name": "Google Sheets Structure",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -20
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‚öôÔ∏è Configuration Steps\n\n### 1. Gmail OAuth2\n- Go to Google Cloud Console\n- Create OAuth2 credentials\n- Add Gmail API scopes\n- Configure in n8n Credentials\n\n### 2. Google Sheets OAuth2\n- Use same Google Cloud project\n- Add Sheets API scopes\n- Configure in n8n Credentials\n\n### 3. Google Gemini API\n- Get API key from Google AI Studio\n- Configure in n8n Credentials\n\n### 4. Update Sheet IDs\n- Replace placeholder IDs in:\n  - CRM node\n  - BoM node\n  - Price node",
        "height": 580,
        "width": 400,
        "color": 6
      },
      "id": "de78c758-120e-452d-8a51-85b98188e8bc",
      "name": "Configuration Steps",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üîç Keyword Detection\n\nThis node checks for spare parts keywords:\n- **Turkish:** \"yedek par√ßa\"\n- **German:** \"Ersatzteile\", \"Ersatzteil\"\n- **English:** \"spare parts\"\n\nAdd more keywords as needed for your use case.",
        "height": 580,
        "width": 320,
        "color": 3
      },
      "id": "c2bad06b-418c-4ebe-9713-fd99200037c0",
      "name": "Keyword Detection Info",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1020,
        -520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìß Email Reply Flow\n\n1. **Gmail node** sends the HTML quote as a reply\n2. **Gmail2 node** marks the original email as read\n\nThis ensures clean inbox management and tracking.",
        "height": 520,
        "width": 480
      },
      "id": "d5313b03-117a-4c1c-bea8-504771442f9c",
      "name": "Email Reply Flow",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2060,
        -520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìã Replace These IDs\n\n**CRM Sheet ID:**\n`YOUR_CRM_SHEET_ID_HERE`\n\n**BoM Sheet ID:**\n`YOUR_BOM_SHEET_ID_HERE`\n\n**Price Sheet ID:**\n`YOUR_PRICE_SHEET_ID_HERE`\n\nFind your Sheet ID in the URL:\n`docs.google.com/spreadsheets/d/[SHEET_ID]/edit`",
        "height": 280,
        "width": 600,
        "color": 7
      },
      "id": "49dcc681-2509-4578-851f-872f5275751d",
      "name": "IMPORTANT: Replace Sheet IDs",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1380,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "id": "08c58e27-3b04-4327-84a5-1d1892f0d19d",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        660,
        -120
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 1,
        "filters": {}
      },
      "id": "40d13bed-80e7-4dc9-b303-b2ee66c16d26",
      "name": "Gmail - Get Latest Email",
      "type": "n8n-nodes-base.gmail",
      "position": [
        860,
        -120
      ],
      "webhookId": "ad7b7fb3-2261-44b8-9911-6f517d30aac1",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "cUlbzquzEwyRhgVx",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "c1d2e3f4-a5b6-7c8d-9e0f-1a2b3c4d5e6f",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.snippet || $json.text || $json.html || '' }}",
              "rightValue": "yedek par√ßa"
            },
            {
              "id": "0d5115f9-1c10-4c00-a82f-a8a3de8a8152",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.snippet || $json.text || $json.html || '' }}",
              "rightValue": "Ersatzteil"
            },
            {
              "id": "91bfaac9-c400-4413-9a8e-a6613add9684",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.snippet || $json.text || $json.html || '' }}",
              "rightValue": "spare parts"
            },
            {
              "id": "1bca2708-9b93-4806-b379-1ef7f7b7b62d",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.snippet || $json.text || $json.html || '' }}",
              "rightValue": "Ersatzteile"
            }
          ]
        },
        "options": {}
      },
      "id": "046fb9bd-2108-4687-83d3-6a3be1bff838",
      "name": "Check Spare Parts Keywords",
      "type": "n8n-nodes-base.if",
      "position": [
        1160,
        -120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a price quote based on the email below. Follow your primary goal and all rules.\n\nSender's Email: {{ $json.To }}\nSubject: {{ $json.Subject }}\nEmail Body: {{ $json.snippet }}\nDate: {{ $('Schedule Trigger').item.json['Readable date'] }}",
        "options": {
          "systemMessage": "**PRIMARY GOAL:** Create a price quote as a complete HTML document, in the EXACT SAME language as the user's email.\n\n**RULES:**\n1.  **DETECT LANGUAGE FIRST.** This is your first action.\n2.  **RESPOND IN DETECTED LANGUAGE.** All text you generate (greetings, table headers, notes, etc.) MUST be in the detected language.\n3.  **OUTPUT MUST BE HTML:** Your final output MUST be a complete HTML document, starting with `<!DOCTYPE html>` and ending with `</html>`. Use the provided HTML template below as a strict guide.\n4.  **TOOLS ARE LANGUAGE-AGNOSTIC:** Your tools (`CRM`, `BoM`, `Price`) fetch data from sheets with English column names (`ProjectCode`, `PartCode`). The data itself may be in any language. **DO NOT TRANSLATE THE DATA** like part descriptions. Just display it as is.\n5.  **CALCULATE EVERYTHING:** You must calculate sub-totals (Quantity * Unit Price) for each item and a final Grand Total. Do not forget this. Use Calculation Tool for every calculation needed!!\n6. **NO MARKDOWN:** Do not wrap your HTML output in Markdown code blocks like \\`\\`\\`html ... \\`\\`\\` . Your entire response must start DIRECTLY with <!DOCTYPE html>.\n7. **CRITICAL: DOUBLE-CHECK MATH:** You MUST calculate the sub-total for each line item (Quantity * Unit Price). Then, you MUST sum ALL sub-totals to get the final Grand Total. Verify your final sum before outputting the HTML. Mathematical accuracy is mandatory.\n8. **CRUCIAL: If mentioned project or Part code does not exist, do NOT provide any proposal. ONLY ask for the real Project Code or Part code!\n\n**EXECUTION FLOW:**\n1.  Find the project code or part codes in the user's email.\n2.  Use the `CRM`, `BoM`, and `Price` tools to get all necessary data.\n3.  Assemble a complete and professional quote by filling in the placeholders in the HTML template below. The entire response must be this HTML.\n\n**HTML TEMPLATE (Use this structure):**\n\n<!DOCTYPE html>\n<html lang=\"[Language Code: tr, en, de]\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>[Quote Title - E.g.: Price Offer]</title>\n    <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { width: 100%; max-width: 800px; margin: 20px auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }\n        .header { text-align: left; padding-bottom: 20px; border-bottom: 2px solid #005A9C; }\n        .header h1 { color: #005A9C; margin: 0; }\n        .quote-table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n        .quote-table th, .quote-table td { border: 1px solid #ddd; padding: 12px; text-align: left; }\n        .quote-table th { background-color: #f2f2f2; font-weight: bold; }\n        .quote-table tr:nth-child(even) { background-color: #f9f9f9; }\n        .text-right { text-align: right; }\n        .footer { margin-top: 30px; font-size: 0.9em; color: #777; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>[Quote Title]</h1>\n            <p><strong>[Date Label]:</strong> {{ $('Schedule Trigger').item.json['Readable date'] }}</p>\n        </div>\n\n        <p>[Greeting]</p>\n        <p>[Introduction paragraph about the quote]</p>\n\n        <table class=\"quote-table\">\n            <thead>\n                <tr>\n                    <th>[Part Code Column]</th>\n                    <th>[Description Column]</th>\n                    <th class=\"text-right\">[Quantity Column]</th>\n                    <th class=\"text-right\">[Unit Price Column]</th>\n                    <th class=\"text-right\">[Total Price Column]</th>\n                </tr>\n            </thead>\n            <tbody>\n                <!-- REPEAT FOR EACH ITEM -->\n                <tr>\n                    <td>[Part Code]</td>\n                    <td>[Part Description]</td>\n                    <td class=\"text-right\">[Quantity]</td>\n                    <td class=\"text-right\">[Unit Price] ‚Ç¨</td>\n                    <td class=\"text-right\">[Total Price] ‚Ç¨</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <table style=\"width: 100%; margin-top: 20px;\">\n            <tr>\n                <td style=\"text-align: right; font-weight: bold; font-size: 1.2em;\">\n                    [Grand Total Label]: [Calculated Grand Total] ‚Ç¨\n                </td>\n            </tr>\n        </table>\n\n        <div class=\"footer\">\n            <p><strong>[Notes Title]:</strong></p>\n            <ul>\n                <li>[Validity period note]</li>\n                <li>[Delivery time note]</li>\n                <li>[Payment terms note]</li>\n            </ul>\n            <p>[Closing statement]<br>[Your Company Name]</p>\n        </div>\n    </div>\n</body>\n</html>",
          "maxIterations": 100
        }
      },
      "id": "99cde149-0c02-40c6-8454-2e3fe704ae3e",
      "name": "AI Agent - Quote Generator",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1440,
        -260
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {
          "maxOutputTokens": 509600,
          "temperature": 0.1
        }
      },
      "id": "df8c2d57-466c-4869-bf4d-2c6af0e46925",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1400,
        -20
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "guBFMhHgni9rVG9Z",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Fetches customer data. Searches the sheet using a column named `Email` or a column named `ProjectCode`.",
        "documentId": {
          "__rl": true,
          "value": "1VQRhHIZNnIliPrq_VM-I1nsuVfSK_pFa8MOhOE4eDaA",
          "mode": "string"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "string"
        },
        "options": {}
      },
      "id": "7d18e9d7-e188-471b-8409-10c3c8b94af3",
      "name": "CRM - Customer Data",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        1620,
        120
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "e7K9JeUvFg2cdP0d",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Fetches a list of all parts for a given project. Searches the sheet using a column named `ProjectCode`. Input a project ID (e.g., \"PRJ-001\") to this tool.",
        "documentId": {
          "__rl": true,
          "value": "1K9WjCxHNxTWpTn7QtCiVQfinhF0SXjuDksUddrhmxhM",
          "mode": "string"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "string"
        },
        "options": {}
      },
      "id": "6ea02c50-d704-4ebe-8f9b-c2a60c2faf56",
      "name": "BoM - Bill of Materials",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        1740,
        120
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "e7K9JeUvFg2cdP0d",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Fetches the price for a single part. Searches the sheet using a column named `PartCode` and returns the price from the `UnitPriceEUR` column. You must call this for every part.",
        "documentId": {
          "__rl": true,
          "value": "1mNa0GTAhOWkdiILXpFVuTe1ZrWvTPiD1Shc5jenJm-8",
          "mode": "string"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "string"
        },
        "options": {}
      },
      "id": "73371f0c-1af3-4b01-85a6-1f7ff4e96391",
      "name": "Price - Pricing Data",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        1880,
        120
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "e7K9JeUvFg2cdP0d",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "id": "0873e68b-0446-4e40-ad7d-5d29e0a064ca",
      "name": "Calculator Tool",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "position": [
        1500,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $('Gmail - Get Latest Email').item.json.id }}",
        "message": "={{ $json.output }}",
        "options": {}
      },
      "id": "c1b64070-d695-4afc-9ccb-2dd23a0cd916",
      "name": "Gmail - Send Reply",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2120,
        -260
      ],
      "webhookId": "cdac6611-3404-4a23-ac06-81f76d19bfb0",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "cUlbzquzEwyRhgVx",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{ $('Gmail - Get Latest Email').item.json.id }}"
      },
      "id": "a5969ec6-4c83-4772-9479-5ca49c9dbf12",
      "name": "Gmail - Mark as Read",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2340,
        -260
      ],
      "webhookId": "9fc68350-a953-43b7-bff9-81db55c433ce",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "cUlbzquzEwyRhgVx",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Calculator Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent - Quote Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Gmail - Get Latest Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Send Reply": {
      "main": [
        [
          {
            "node": "Gmail - Mark as Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRM - Customer Data": {
      "ai_tool": [
        [
          {
            "node": "AI Agent - Quote Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Price - Pricing Data": {
      "ai_tool": [
        [
          {
            "node": "AI Agent - Quote Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "BoM - Bill of Materials": {
      "ai_tool": [
        [
          {
            "node": "AI Agent - Quote Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - Get Latest Email": {
      "main": [
        [
          {
            "node": "Check Spare Parts Keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent - Quote Generator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent - Quote Generator": {
      "main": [
        [
          {
            "node": "Gmail - Send Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Spare Parts Keywords": {
      "main": [
        [
          {
            "node": "AI Agent - Quote Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ac72b80e-30ad-4205-b5d2-5cd93516c24e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b1936b33420b0facb61b246cd239a2c195c2e327ceea8081892252d261a13330"
  },
  "id": "Gn8H7PtHh3mjwc13",
  "tags": []
}